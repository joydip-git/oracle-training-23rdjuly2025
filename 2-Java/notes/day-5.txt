abstract class:
	DataAccess -> String readData()
	
	FileDataAcces -> String readData()
	DbDataAcces -> String readData()

interface:
	collection of ONLY abstract methods (including getter and setter)
	can't have any data member declaration
	can't have explicit constructor declaration
	by default members are abstract and public. no need to use those keywords.
	a class can implement multiple interfaces
	can't instantiate
	should be used as a contract of some concrete implementation. it helps to abstract the implementation.


abstract:
	collection of abstract methods (including getter and setter) as well as non-abstract methods
	can have any data member declaration
	can have explicit constructor declaration
	by default members are NOT abstract and NOT public. need to use those keywords.
	a class can't inherit from multiple classes
	can't instantiate
	should be used when the child classes do have data and some methods in common, where the methods do have different implementation in child classes.

class A{}
interface IA{}
interface IB{}
class B extends A, implements IA, IB{
}
















	